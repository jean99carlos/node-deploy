generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Usuario {
  id          String        @id @default(cuid())
  nome        String
  email       String
  senha       String
  createdAt   DateTime      @default(now())
  AceiteTermo AceiteTermo[]
  Pessoa      Pessoa?
}

model AceiteTermo {
  id        String   @id @default(uuid())
  usuarioId String
  ip        String
  browser   String
  aceite    Boolean
  dataHora  DateTime @default(now())
  usuario   Usuario  @relation(fields: [usuarioId], references: [id])
}

model Ano {
  id        String @id @default(uuid())
  descricao String
  Polo      Polo[]
}

model Polo {
  id          String   @id @default(uuid())
  anoId       String
  descricao   String
  logradouro  String
  numero      String
  complemento String
  cep         String
  bairro      String
  municipio   String
  uf          String
  Oferta      Oferta[]
  ano         Ano      @relation(fields: [anoId], references: [id])
}

model Pactuacao {
  id        String   @id @default(uuid())
  descricao String
  programa  String
  Oferta    Oferta[]
}

model Oferta {
  id              String           @id @default(uuid())
  cursoId         String           @unique
  pactuacaoId     String
  vagas           Int
  poloId          String
  curso           Curso            @relation(fields: [cursoId], references: [id])
  Pactuacao       Pactuacao        @relation(fields: [pactuacaoId], references: [id])
  Polo            Polo             @relation(fields: [poloId], references: [id])
  PlanoCurricular PlanoCurricular?
}

model Pessoa {
  id             String   @id @default(uuid())
  usuarioId      String   @unique
  cpf            String
  dataNascimento DateTime
  logradouro     String
  numero         String
  complemento    String
  cep            String
  bairro         String
  municipio      String
  uf             String
  Aluno          Aluno?
  Usuario        Usuario  @relation(fields: [usuarioId], references: [id])
}

model Aluno {
  id        String      @id @default(uuid())
  pessoaId  String      @unique
  Pessoa    Pessoa      @relation(fields: [pessoaId], references: [id])
  Matricula Matricula[]
}

model Matricula {
  id           String     @id @default(uuid())
  alunoId      String
  enturmacaoId String     @unique
  Aluno        Aluno      @relation(fields: [alunoId], references: [id])
  Enturmacao   Enturmacao @relation(fields: [enturmacaoId], references: [id])
}

model Enturmacao {
  id        String     @id @default(uuid())
  turmaId   String
  Matricula Matricula?
}

model Turma {
  id        String @id @default(uuid())
  descricao String
}

model Curso {
  id        String  @id @default(uuid())
  descricao String
  Oferta    Oferta?
}

model PlanoCurricular {
  id           String   @id @default(uuid())
  anoId        String
  ofertaId     String   @unique
  cargaHoraria Int
  Modulo       Modulo[]
  oferta       Oferta   @relation(fields: [ofertaId], references: [id])
}

model Modulo {
  id                String          @id @default(uuid())
  planoCurricularId String
  Disciplina        Disciplina[]
  planoCurricular   PlanoCurricular @relation(fields: [planoCurricularId], references: [id])
}

model Disciplina {
  id           String  @id @default(uuid())
  moduloId     String
  descricao    String
  pratica      Boolean
  cargaHoraria Int
  modulo       Modulo  @relation(fields: [moduloId], references: [id])
}
